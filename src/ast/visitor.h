// generated by nodegen.py; do not edit

#pragma once

struct Program;
struct ExprStatement;
struct VariableDef;
struct FunctionDef;
struct NumberLiteral;
struct StringLiteral;
struct BooleanLiteral;
struct UnitLiteral;
struct Identifier;
struct FunctionCall;
struct InfixOperator;
struct PrefixOperator;
struct PostfixOperator;
struct ReturnExpr;
struct IfExpr;
struct Invalid;
struct Block;
struct Parameter;
struct Type;

class Visitor
{
public:
	virtual void visit(Program &node) = 0;
	virtual void visit(ExprStatement &node) = 0;
	virtual void visit(VariableDef &node) = 0;
	virtual void visit(FunctionDef &node) = 0;
	virtual void visit(NumberLiteral &node) = 0;
	virtual void visit(StringLiteral &node) = 0;
	virtual void visit(BooleanLiteral &node) = 0;
	virtual void visit(UnitLiteral &node) = 0;
	virtual void visit(Identifier &node) = 0;
	virtual void visit(FunctionCall &node) = 0;
	virtual void visit(InfixOperator &node) = 0;
	virtual void visit(PrefixOperator &node) = 0;
	virtual void visit(PostfixOperator &node) = 0;
	virtual void visit(ReturnExpr &node) = 0;
	virtual void visit(IfExpr &node) = 0;
	virtual void visit(Invalid &node) = 0;
	virtual void visit(Block &node) = 0;
	virtual void visit(Parameter &node) = 0;
	virtual void visit(Type &node) = 0;
};
